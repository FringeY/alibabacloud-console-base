{"remainingRequest":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/thread-loader/dist/cjs.js??ref--9-1!/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/@alicloud/console-toolkit-plugin-typescript/node_modules/ts-loader/index.js??ref--9-2!/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/packages/console-base-error-prompt/src/error-prompt/index.tsx","dependencies":[{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/packages/console-base-error-prompt/src/error-prompt/index.tsx","mtime":1606374669626},{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/cache-loader/dist/cjs.js","mtime":1606739830244},{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/thread-loader/dist/cjs.js","mtime":1606739824609},{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/@alicloud/console-toolkit-plugin-typescript/node_modules/ts-loader/index.js","mtime":1606739827333}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwp2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBmdW5jdGlvbiAoKSB7CiAgICBfX2Fzc2lnbiA9IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkgewogICAgICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykgewogICAgICAgICAgICBzID0gYXJndW1lbnRzW2ldOwogICAgICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpCiAgICAgICAgICAgICAgICB0W3BdID0gc1twXTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHQ7CiAgICB9OwogICAgcmV0dXJuIF9fYXNzaWduLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7Cn07CnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikgewogICAgZnVuY3Rpb24gYWRvcHQodmFsdWUpIHsgcmV0dXJuIHZhbHVlIGluc3RhbmNlb2YgUCA/IHZhbHVlIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZSh2YWx1ZSk7IH0pOyB9CiAgICByZXR1cm4gbmV3IChQIHx8IChQID0gUHJvbWlzZSkpKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9CiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbInRocm93Il0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfQogICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogYWRvcHQocmVzdWx0LnZhbHVlKS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9CiAgICAgICAgc3RlcCgoZ2VuZXJhdG9yID0gZ2VuZXJhdG9yLmFwcGx5KHRoaXNBcmcsIF9hcmd1bWVudHMgfHwgW10pKS5uZXh0KCkpOwogICAgfSk7Cn07CnZhciBfX2dlbmVyYXRvciA9ICh0aGlzICYmIHRoaXMuX19nZW5lcmF0b3IpIHx8IGZ1bmN0aW9uICh0aGlzQXJnLCBib2R5KSB7CiAgICB2YXIgXyA9IHsgbGFiZWw6IDAsIHNlbnQ6IGZ1bmN0aW9uKCkgeyBpZiAodFswXSAmIDEpIHRocm93IHRbMV07IHJldHVybiB0WzFdOyB9LCB0cnlzOiBbXSwgb3BzOiBbXSB9LCBmLCB5LCB0LCBnOwogICAgcmV0dXJuIGcgPSB7IG5leHQ6IHZlcmIoMCksICJ0aHJvdyI6IHZlcmIoMSksICJyZXR1cm4iOiB2ZXJiKDIpIH0sIHR5cGVvZiBTeW1ib2wgPT09ICJmdW5jdGlvbiIgJiYgKGdbU3ltYm9sLml0ZXJhdG9yXSA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gdGhpczsgfSksIGc7CiAgICBmdW5jdGlvbiB2ZXJiKG4pIHsgcmV0dXJuIGZ1bmN0aW9uICh2KSB7IHJldHVybiBzdGVwKFtuLCB2XSk7IH07IH0KICAgIGZ1bmN0aW9uIHN0ZXAob3ApIHsKICAgICAgICBpZiAoZikgdGhyb3cgbmV3IFR5cGVFcnJvcigiR2VuZXJhdG9yIGlzIGFscmVhZHkgZXhlY3V0aW5nLiIpOwogICAgICAgIHdoaWxlIChfKSB0cnkgewogICAgICAgICAgICBpZiAoZiA9IDEsIHkgJiYgKHQgPSBvcFswXSAmIDIgPyB5WyJyZXR1cm4iXSA6IG9wWzBdID8geVsidGhyb3ciXSB8fCAoKHQgPSB5WyJyZXR1cm4iXSkgJiYgdC5jYWxsKHkpLCAwKSA6IHkubmV4dCkgJiYgISh0ID0gdC5jYWxsKHksIG9wWzFdKSkuZG9uZSkgcmV0dXJuIHQ7CiAgICAgICAgICAgIGlmICh5ID0gMCwgdCkgb3AgPSBbb3BbMF0gJiAyLCB0LnZhbHVlXTsKICAgICAgICAgICAgc3dpdGNoIChvcFswXSkgewogICAgICAgICAgICAgICAgY2FzZSAwOiBjYXNlIDE6IHQgPSBvcDsgYnJlYWs7CiAgICAgICAgICAgICAgICBjYXNlIDQ6IF8ubGFiZWwrKzsgcmV0dXJuIHsgdmFsdWU6IG9wWzFdLCBkb25lOiBmYWxzZSB9OwogICAgICAgICAgICAgICAgY2FzZSA1OiBfLmxhYmVsKys7IHkgPSBvcFsxXTsgb3AgPSBbMF07IGNvbnRpbnVlOwogICAgICAgICAgICAgICAgY2FzZSA3OiBvcCA9IF8ub3BzLnBvcCgpOyBfLnRyeXMucG9wKCk7IGNvbnRpbnVlOwogICAgICAgICAgICAgICAgZGVmYXVsdDoKICAgICAgICAgICAgICAgICAgICBpZiAoISh0ID0gXy50cnlzLCB0ID0gdC5sZW5ndGggPiAwICYmIHRbdC5sZW5ndGggLSAxXSkgJiYgKG9wWzBdID09PSA2IHx8IG9wWzBdID09PSAyKSkgeyBfID0gMDsgY29udGludWU7IH0KICAgICAgICAgICAgICAgICAgICBpZiAob3BbMF0gPT09IDMgJiYgKCF0IHx8IChvcFsxXSA+IHRbMF0gJiYgb3BbMV0gPCB0WzNdKSkpIHsgXy5sYWJlbCA9IG9wWzFdOyBicmVhazsgfQogICAgICAgICAgICAgICAgICAgIGlmIChvcFswXSA9PT0gNiAmJiBfLmxhYmVsIDwgdFsxXSkgeyBfLmxhYmVsID0gdFsxXTsgdCA9IG9wOyBicmVhazsgfQogICAgICAgICAgICAgICAgICAgIGlmICh0ICYmIF8ubGFiZWwgPCB0WzJdKSB7IF8ubGFiZWwgPSB0WzJdOyBfLm9wcy5wdXNoKG9wKTsgYnJlYWs7IH0KICAgICAgICAgICAgICAgICAgICBpZiAodFsyXSkgXy5vcHMucG9wKCk7CiAgICAgICAgICAgICAgICAgICAgXy50cnlzLnBvcCgpOyBjb250aW51ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICBvcCA9IGJvZHkuY2FsbCh0aGlzQXJnLCBfKTsKICAgICAgICB9IGNhdGNoIChlKSB7IG9wID0gWzYsIGVdOyB5ID0gMDsgfSBmaW5hbGx5IHsgZiA9IHQgPSAwOyB9CiAgICAgICAgaWYgKG9wWzBdICYgNSkgdGhyb3cgb3BbMV07IHJldHVybiB7IHZhbHVlOiBvcFswXSA/IG9wWzFdIDogdm9pZCAwLCBkb25lOiB0cnVlIH07CiAgICB9Cn07CnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkgewogICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyAiZGVmYXVsdCI6IG1vZCB9Owp9OwpPYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgIl9fZXNNb2R1bGUiLCB7IHZhbHVlOiB0cnVlIH0pOwp2YXIgcmVhY3RfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKCJyZWFjdCIpKTsKdmFyIGNvbnNvbGVfYmFzZV9yY19kaWFsb2dfMSA9IHJlcXVpcmUoIkBhbGljbG91ZC9jb25zb2xlLWJhc2UtcmMtZGlhbG9nIik7CnZhciBpbnRsXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZSgiLi4vaW50bCIpKTsKdmFyIGNvbnZlcnRfdG9fZXJyb3JfcXVldWVfaXRlbV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoIi4uL3V0aWwvY29udmVydC10by1lcnJvci1xdWV1ZS1pdGVtIikpOwp2YXIgZGlhbG9nX2NvbnRlbnRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKCIuL2RpYWxvZy1jb250ZW50IikpOwp2YXIgU09MTyA9IHsKICAgIGRpYWxvZ0luZGlyZWN0OiBudWxsLAogICAgcXVldWU6IFtdCn07CnZhciBkZWZhdWx0VGl0bGUgPSBpbnRsXzEuZGVmYXVsdCgnYWxlcnRfZXJyb3I6dGl0bGUnKTsKdmFyIGRlZmF1bHRCdXR0b24gPSBpbnRsXzEuZGVmYXVsdCgnYWxlcnRfZXJyb3I6b3A6b2snKTsKLyoqCiAqIOmUmeivr+W8ueeqlwogKgogKiBgb2Ag5Y+v5Lul5piv77yaCiAqICAgIDEuIOWtl+espuS4suOAgUpTWCDkvJrooqvlvZPkvZwgbWVzc2FnZQogKiAgICAyLiBFcnJvciDlrp7kvovvvIzph4zovrnlj6/ku6XmnIkgZGV0YWlscyDlr7nosaHljIXlkKvopoHlsZXnpLrnmoTkv6Hmga8KICogICAgMy4gcGxhaW4gb2JqZWN0CiAqIGBleHRyYWAg55So5LqO6Ieq5a6a5LmJIHRpdGxl44CBYnV0dG9uCiAqLwpmdW5jdGlvbiBlcnJvclByb21wdChvLCBleHRyYSkgewogICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIFByb21pc2UsIGZ1bmN0aW9uICgpIHsKICAgICAgICB2YXIgcXVldWVJdGVtLCBxdWV1ZSwgZXJyb3JQcm9taXNlLCBkaWFsb2dDb250ZW50LCBkaWFsb2dJbmRpcmVjdDsKICAgICAgICByZXR1cm4gX19nZW5lcmF0b3IodGhpcywgZnVuY3Rpb24gKF9hKSB7CiAgICAgICAgICAgIHF1ZXVlSXRlbSA9IGNvbnZlcnRfdG9fZXJyb3JfcXVldWVfaXRlbV8xLmRlZmF1bHQobywgZXh0cmEpOwogICAgICAgICAgICBpZiAoIShxdWV1ZUl0ZW0gPT09IG51bGwgfHwgcXVldWVJdGVtID09PSB2b2lkIDAgPyB2b2lkIDAgOiBxdWV1ZUl0ZW0uZXJyb3IpKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qL107CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcXVldWUgPSBTT0xPLnF1ZXVlOwogICAgICAgICAgICBlcnJvclByb21pc2UgPSBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSkgewogICAgICAgICAgICAgICAgcXVldWVJdGVtLnJlc29sdmUgPSByZXNvbHZlOwogICAgICAgICAgICB9KTsKICAgICAgICAgICAgcXVldWUucHVzaChxdWV1ZUl0ZW0pOwogICAgICAgICAgICBkaWFsb2dDb250ZW50ID0gcmVhY3RfMS5kZWZhdWx0LmNyZWF0ZUVsZW1lbnQoY29uc29sZV9iYXNlX3JjX2RpYWxvZ18xLkFsdFdyYXAsIF9fYXNzaWduKHt9LCB7CiAgICAgICAgICAgICAgICBjb250ZW50OiByZWFjdF8xLmRlZmF1bHQuY3JlYXRlRWxlbWVudChkaWFsb2dfY29udGVudF8xLmRlZmF1bHQsIF9fYXNzaWduKHt9LCB7CiAgICAgICAgICAgICAgICAgICAgcXVldWU6IHF1ZXVlCiAgICAgICAgICAgICAgICB9KSkKICAgICAgICAgICAgfSkpOwogICAgICAgICAgICBpZiAoU09MTy5kaWFsb2dJbmRpcmVjdCkgeyAvLyBkaWFsb2cg5bey57uP5omT5byACiAgICAgICAgICAgICAgICBTT0xPLmRpYWxvZ0luZGlyZWN0LnJlbmRlclVwZGF0ZSh7CiAgICAgICAgICAgICAgICAgICAgY29udGVudDogZGlhbG9nQ29udGVudAogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgZXJyb3JQcm9taXNlXTsKICAgICAgICAgICAgfQogICAgICAgICAgICBkaWFsb2dJbmRpcmVjdCA9IGNvbnNvbGVfYmFzZV9yY19kaWFsb2dfMS5vcGVuSW5kaXJlY3QoewogICAgICAgICAgICAgICAgY29udGVudDogZGlhbG9nQ29udGVudCwKICAgICAgICAgICAgICAgIHRpdGxlOiBmdW5jdGlvbiAoZGF0YSkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBxdWV1ZVtkYXRhLnBhZ2UgLSAxXS50aXRsZSB8fCBkZWZhdWx0VGl0bGU7CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgYnV0dG9uczogZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgICAgICAgICAgICAgICByZXR1cm4gW3F1ZXVlW2RhdGEucGFnZSAtIDFdLmJ1dHRvbiB8fCBkZWZhdWx0QnV0dG9uXTsKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB1bmRlZmluZWRBc1JlamVjdDogZmFsc2UsCiAgICAgICAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgICAgICAgICAgcGFnZTogMQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgU09MTy5kaWFsb2dJbmRpcmVjdCA9IGRpYWxvZ0luZGlyZWN0OwogICAgICAgICAgICBkaWFsb2dJbmRpcmVjdC5wcm9taXNlLnRoZW4oZnVuY3Rpb24gKCkgewogICAgICAgICAgICAgICAgcXVldWUuZm9yRWFjaChmdW5jdGlvbiAodikgeyByZXR1cm4gdi5yZXNvbHZlKCk7IH0pOwogICAgICAgICAgICAgICAgU09MTy5kaWFsb2dJbmRpcmVjdCA9IG51bGw7CiAgICAgICAgICAgICAgICBTT0xPLnF1ZXVlID0gW107CiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXR1cm4gWzIgLypyZXR1cm4qLywgZXJyb3JQcm9taXNlXTsKICAgICAgICB9KTsKICAgIH0pOwp9CmV4cG9ydHMuZGVmYXVsdCA9IGVycm9yUHJvbXB0Owo="},null]}