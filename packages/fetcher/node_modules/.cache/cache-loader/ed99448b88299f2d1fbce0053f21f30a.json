{"remainingRequest":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/thread-loader/dist/cjs.js??ref--9-1!/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/@alicloud/console-toolkit-plugin-typescript/node_modules/ts-loader/index.js??ref--9-2!/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/packages/fetcher/src/fetcher/index.ts","dependencies":[{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/packages/fetcher/src/fetcher/index.ts","mtime":1606194741677},{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/cache-loader/dist/cjs.js","mtime":1606739830244},{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/thread-loader/dist/cjs.js","mtime":1606739824609},{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/@alicloud/console-toolkit-plugin-typescript/node_modules/ts-loader/index.js","mtime":1606739827333}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}