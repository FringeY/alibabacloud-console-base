{"remainingRequest":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/thread-loader/dist/cjs.js??ref--9-1!/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/@alicloud/console-toolkit-plugin-typescript/node_modules/ts-loader/index.js??ref--9-2!/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/packages/console-base-rc-dialog/src/model/util/push-stack.ts","dependencies":[{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/packages/console-base-rc-dialog/src/model/util/push-stack.ts","mtime":1606703072791},{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/cache-loader/dist/cjs.js","mtime":1606739830244},{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/thread-loader/dist/cjs.js","mtime":1606739824609},{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/@alicloud/console-toolkit-plugin-typescript/node_modules/ts-loader/index.js","mtime":1606739827333}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:InVzZSBzdHJpY3QiOwp2YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHsKICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgImRlZmF1bHQiOiBtb2QgfTsKfTsKT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsICJfX2VzTW9kdWxlIiwgeyB2YWx1ZTogdHJ1ZSB9KTsKZXhwb3J0cy5mb2N1c0RpYWxvZyA9IHZvaWQgMDsKdmFyIGNvbnN0XzEgPSByZXF1aXJlKCIuLi9jb25zdCIpOwp2YXIgYmFja2Ryb3BfMSA9IHJlcXVpcmUoIi4uLy4uL3JjL2JhY2tkcm9wIik7CnZhciBjcmVhdGVfc3RhY2tfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKCIuL2NyZWF0ZS1zdGFjayIpKTsKdmFyIGdldF9uZXh0X2VsZW1lbnRfdG9fZm9jdXNfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKCIuL2dldC1uZXh0LWVsZW1lbnQtdG8tZm9jdXMiKSk7CnZhciBTVEFDSyA9IGNyZWF0ZV9zdGFja18xLmRlZmF1bHQoKTsKLyoqCiAqIOaJvuWIsOOAjOacgOmhtuOAjeeahCBkaWFsb2fvvIzov5nph4znmoTmnIDpobbkuI3kuIDlrprmmK8gaWQg5pyA5aSn55qE77yM5a6D5piv5oyHIHotaW5kZXgg5pyA5aSn55qE5b2T5LitIGlkIOacgOWkp+eahOmCo+S4qgogKi8KZnVuY3Rpb24gZmluZFRvcG1vc3QoKSB7CiAgICB2YXIgdG9wbW9zdFpJbmRleCA9IC0xOwogICAgdmFyIHRvcG1vc3ROdW1JZCA9IC0xOwogICAgU1RBQ0suZWFjaChmdW5jdGlvbiAodiwgaykgewogICAgICAgIHZhciB6SW5kZXggPSB2LnpJbmRleDsKICAgICAgICB2YXIgbnVtID0gTnVtYmVyKGspOwogICAgICAgIGlmICh6SW5kZXggPiB0b3Btb3N0WkluZGV4KSB7CiAgICAgICAgICAgIHRvcG1vc3RaSW5kZXggPSB6SW5kZXg7CiAgICAgICAgICAgIHRvcG1vc3ROdW1JZCA9IG51bTsKICAgICAgICB9CiAgICAgICAgZWxzZSBpZiAoekluZGV4ID09PSB0b3Btb3N0WkluZGV4ICYmIG51bSA+IHRvcG1vc3ROdW1JZCkgewogICAgICAgICAgICB0b3Btb3N0TnVtSWQgPSBudW07CiAgICAgICAgfQogICAgfSk7CiAgICByZXR1cm4gU1RBQ0suZ2V0KHRvcG1vc3ROdW1JZCk7Cn0KLyoqCiAqIOWIpOaWrem8oOagh+eCueWHu+S6i+S7tuaYr+WQpuWPkeeUn+WcqCBkaWFsb2cg5YaF6YOoCiAqLwpmdW5jdGlvbiBpbkRpYWxvZyhlLCBkb21EaWFsb2cpIHsKICAgIHZhciBlbCA9IGUudGFyZ2V0OwogICAgd2hpbGUgKGVsICYmIGVsICE9PSBkb2N1bWVudC5ib2R5KSB7CiAgICAgICAgaWYgKGVsID09PSBkb21EaWFsb2cpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICAgIGVsID0gZWwucGFyZW50RWxlbWVudDsgLy8gZXNsaW50LWRpc2FibGUtbGluZSBuby1wYXJhbS1yZWFzc2lnbgogICAgfQogICAgcmV0dXJuIGZhbHNlOwp9Ci8qKgogKiDlsIbnhKbngrnlsYDpmZDlnKggZGlhbG9nIOS4reaXoOazlei3s+WHugogKi8KZnVuY3Rpb24gdHJhcEZvY3VzKGRvbURpYWxvZywgZG9tRGlhbG9nQ29udGVudCwgaG93KSB7CiAgICB2YXIgZWwgPSBnZXRfbmV4dF9lbGVtZW50X3RvX2ZvY3VzXzEuZGVmYXVsdChkb21EaWFsb2csIGRvbURpYWxvZ0NvbnRlbnQsIGhvdyk7CiAgICB0cnkgewogICAgICAgIGVsLmZvY3VzKCk7CiAgICAgICAgZWwuc2VsZWN0KCk7CiAgICB9CiAgICBjYXRjaCAoZXgpIHsKICAgICAgICAvLyBpZ25vcmUgaXQKICAgIH0KfQovKioKICog5YWo5bGA54K55Ye75LqL5Lu2IC0g5aSE55CG5aSW6YOo54K55Ye7CiAqLwpmdW5jdGlvbiBoYW5kbGVDbGlja0V4dGVybmFsQ2xpY2soZSkgewogICAgdmFyIHRvcG1vc3QgPSBmaW5kVG9wbW9zdCgpOwogICAgaWYgKCF0b3Btb3N0KSB7CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgdmFyIGRvbURpYWxvZyA9IHRvcG1vc3QuZG9tRGlhbG9nLCBkaXNwYXRjaENsb3NlT25FeHRlcm5hbCA9IHRvcG1vc3QuZGlzcGF0Y2hDbG9zZU9uRXh0ZXJuYWw7CiAgICBpZiAoaW5EaWFsb2coZSwgZG9tRGlhbG9nKSkgewogICAgICAgIHJldHVybjsKICAgIH0KICAgIGRpc3BhdGNoQ2xvc2VPbkV4dGVybmFsKCk7Cn0KLyoKICog5YWo5bGAIEVTQyDnrqHmjqcKICovCmZ1bmN0aW9uIGhhbmRsZUtleWRvd25Fc2MoZSkgewogICAgaWYgKGUua2V5ICE9PSAnRXNjYXBlJykgewogICAgICAgIHJldHVybjsKICAgIH0KICAgIHZhciB0b3Btb3N0ID0gZmluZFRvcG1vc3QoKTsKICAgIGlmICghdG9wbW9zdCkgewogICAgICAgIHJldHVybjsKICAgIH0KICAgIHRvcG1vc3QuZGlzcGF0Y2hDbG9zZU9uRXNjKCk7Cn0KLyoqCiAqIOWFqOWxgCB0YWIg566h5o6nCiAqLwpmdW5jdGlvbiBoYW5kbGVNb3VzZURvd25UcmFwVGFiKGUpIHsKICAgIGlmIChlLmtleSAhPT0gJ1RhYicpIHsKICAgICAgICByZXR1cm47CiAgICB9CiAgICB2YXIgdG9wbW9zdCA9IGZpbmRUb3Btb3N0KCk7CiAgICBpZiAoIXRvcG1vc3QpIHsKICAgICAgICByZXR1cm47CiAgICB9CiAgICB0cmFwRm9jdXModG9wbW9zdC5kb21EaWFsb2csIHRvcG1vc3QuZG9tRGlhbG9nQ29udGVudCwgZS5zaGlmdEtleSA/IGNvbnN0XzEuRURpYWxvZ0ZvY3VzSG93LlBSRVYgOiBjb25zdF8xLkVEaWFsb2dGb2N1c0hvdy5ORVhUKTsKICAgIGUucHJldmVudERlZmF1bHQoKTsKfQovKioKICog5aSE55CG6IOM5oqV5ZKMIHotaW5kZXgKICovCmZ1bmN0aW9uIGRvQmFja2Ryb3BBbmRaSW5kZXgoKSB7CiAgICB2YXIgdG9wbW9zdCA9IGZpbmRUb3Btb3N0KCk7CiAgICBpZiAoIXRvcG1vc3QpIHsKICAgICAgICBiYWNrZHJvcF8xLnJlbW92ZUJhY2tkcm9wKCk7CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgaWYgKCF0b3Btb3N0LmJhY2tkcm9wKSB7CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgU1RBQ0suZWFjaChmdW5jdGlvbiAodikgewogICAgICAgIGlmICh2ID09PSB0b3Btb3N0KSB7CiAgICAgICAgICAgIHYuZGlzcGF0Y2hTZXRaSW5kZXgoLTEpOyAvLyDlm57liLDmnIDpobYKICAgICAgICB9CiAgICAgICAgZWxzZSB7CiAgICAgICAgICAgIHYuZGlzcGF0Y2hTZXRaSW5kZXgodG9wbW9zdC56SW5kZXhCYWNrZHJvcCAtIDEpOyAvLyDooqvmnIDpobbnmoQgYmFja2Ryb3Ag5Y6L5L2PCiAgICAgICAgfQogICAgfSk7CiAgICBiYWNrZHJvcF8xLnNob3dCYWNrZHJvcCh0b3Btb3N0LnpJbmRleEJhY2tkcm9wKTsKfQpmdW5jdGlvbiBwdXRUb1NhY2soZGlhbG9nSWQsIG8pIHsKICAgIHZhciBuID0gU1RBQ0sucHV0KGRpYWxvZ0lkLCBvKTsKICAgIGRvQmFja2Ryb3BBbmRaSW5kZXgoKTsKICAgIGlmIChuIDwgMCkgewogICAgICAgIHJldHVybjsKICAgIH0KICAgIGlmIChuID09PSAxKSB7CiAgICAgICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBoYW5kbGVDbGlja0V4dGVybmFsQ2xpY2ssIHRydWUpOwogICAgICAgIGRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2tleWRvd24nLCBoYW5kbGVLZXlkb3duRXNjLCB0cnVlKTsKICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlTW91c2VEb3duVHJhcFRhYiwgdHJ1ZSk7CiAgICB9Cn0KZnVuY3Rpb24gcmVtb3ZlRnJvbVN0YWNrKGRpYWxvZ0lkKSB7CiAgICB2YXIgbiA9IFNUQUNLLnJlbW92ZShkaWFsb2dJZCk7CiAgICBkb0JhY2tkcm9wQW5kWkluZGV4KCk7CiAgICBpZiAobiA8IDApIHsKICAgICAgICByZXR1cm47CiAgICB9CiAgICBpZiAobiA9PT0gMCkgewogICAgICAgIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgaGFuZGxlQ2xpY2tFeHRlcm5hbENsaWNrLCB0cnVlKTsKICAgICAgICBkb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdrZXlkb3duJywgaGFuZGxlS2V5ZG93bkVzYywgdHJ1ZSk7CiAgICAgICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcigna2V5ZG93bicsIGhhbmRsZU1vdXNlRG93blRyYXBUYWIsIHRydWUpOwogICAgfQp9Ci8qKgogKiDljovmoIjvvIzmr4/miZPlvIDkuIDkuKogRGlhbG9nIOWQkeWQhOS4quWghuagiOS4reaOqOWFpeS4gOS4qu+8jOW5tui/lOWbnuWHuuagiOaWueazle+8iOWPr+eUqOS6jiB1c2VFZmZlY3TvvIkKICovCmZ1bmN0aW9uIHB1c2hTdGFja0FsbChkaWFsb2dJZCwgaXRlbSkgewogICAgcHV0VG9TYWNrKGRpYWxvZ0lkLCBpdGVtKTsKICAgIHJldHVybiBmdW5jdGlvbiAoKSB7IHJldHVybiByZW1vdmVGcm9tU3RhY2soZGlhbG9nSWQpOyB9Owp9CmV4cG9ydHMuZGVmYXVsdCA9IHB1c2hTdGFja0FsbDsKLyoqCiAqIOWvuemhtuWxgueahCBEaWFsb2cg6L+b6KGM6IGa54Sm77yM55SxIERpYWxvZyDoh6rlt7HmiYvliqjosIPnlKjvvIjlvZPlroPmg7PlnKggZGlkIG1vdW50IOS5i+WQjumHjeiuvueEpueCueeahOaXtuWAme+8ieOAggogKi8KZnVuY3Rpb24gZm9jdXNEaWFsb2coZG9tRGlhbG9nLCBkb21EaWFsb2dDb250ZW50KSB7CiAgICB2YXIgdG9wbW9zdCA9IGZpbmRUb3Btb3N0KCk7CiAgICAvLyDkv53or4Hlj6rmnInpobblsYLnmoQgRGlhbG9nIOWPr+S7peiOt+W+l+eEpueCuQogICAgaWYgKCF0b3Btb3N0IHx8IGRvbURpYWxvZyAhPT0gdG9wbW9zdC5kb21EaWFsb2cgfHwgZG9tRGlhbG9nQ29udGVudCAhPT0gdG9wbW9zdC5kb21EaWFsb2dDb250ZW50KSB7CiAgICAgICAgcmV0dXJuOwogICAgfQogICAgdHJhcEZvY3VzKGRvbURpYWxvZywgZG9tRGlhbG9nQ29udGVudCwgY29uc3RfMS5FRGlhbG9nRm9jdXNIb3cuQVVUTyk7Cn0KZXhwb3J0cy5mb2N1c0RpYWxvZyA9IGZvY3VzRGlhbG9nOwo="},null]}