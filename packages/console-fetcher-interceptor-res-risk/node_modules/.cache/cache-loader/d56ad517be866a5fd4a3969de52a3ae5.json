{"remainingRequest":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/thread-loader/dist/cjs.js??ref--9-1!/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/@alicloud/console-toolkit-plugin-typescript/node_modules/ts-loader/index.js??ref--9-2!/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/packages/console-fetcher-interceptor-res-risk/src/util/risk/verify/content/generate/index.tsx","dependencies":[{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/packages/console-fetcher-interceptor-res-risk/src/util/risk/verify/content/generate/index.tsx","mtime":1606374668183},{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/cache-loader/dist/cjs.js","mtime":1606739830244},{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/thread-loader/dist/cjs.js","mtime":1606739824609},{"path":"/Users/jianchun.wang/zombie/@console-base/alibabacloud-console-base/node_modules/@alicloud/console-toolkit-plugin-typescript/node_modules/ts-loader/index.js","mtime":1606739827333}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}